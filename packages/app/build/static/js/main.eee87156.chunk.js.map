{"version":3,"sources":["components/App/App.styles.ts","components/App/Header/Search/Search.styles.ts","components/App/Header/Search/Search.tsx","machines/Auth/Auth.tsx","hooks/useAuth.ts","context/Auth/Auth.tsx","machines/Settings/Settings.tsx","hooks/useSettings.ts","context/Settings/Settings.tsx","components/App/Header/Settings/Settings.styles.ts","components/App/Header/Settings/Settings.tsx","components/App/Header/Header.styles.ts","components/App/Header/Header.tsx","components/App/Menu/Navigation/Navigation.styles.ts","components/App/Menu/Navigation/Navigation.tsx","components/App/Menu/Menu.styles.ts","components/App/Menu/Menu.tsx","components/App/Player/Player.styles.ts","components/App/Player/Podcast/Podcast.styles.ts","components/App/Player/Podcast/Podcast.tsx","components/App/Player/Controls/Controls.styles.ts","components/App/Player/Controls/Controls.tsx","components/App/Player/RightControls/RightControls.styles.ts","components/App/Player/RightControls/Volume/Volume.styles.ts","components/App/Player/RightControls/Volume/Volume.tsx","machines/Queue/Queue.tsx","hooks/useQueue.ts","context/Queue/Queue.tsx","machines/Rate/Rate.tsx","hooks/useRate.ts","context/Rate/Rate.tsx","components/App/Player/RightControls/RightControls.tsx","components/App/Player/Player.tsx","components/App/Dashboard/Dashboard.styles.ts","components/App/Dashboard/Dashboard.tsx","modules/App/Home/Home.tsx","modules/App/Podcasts/Podcasts.tsx","components/App/App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["AppContainer","styled","div","SearchContainer","Search","type","placeholder","Auth","Machine","id","initial","states","idle","on","OPEN","open","CLOSE","getstarted","SIGNIN","SIGNUP","FORGOT","signin","signup","forgot","reset","SUBMITTING","submitting","SUCCESS","ERROR","success","loggedIn","LOGOUT","useAuth","useMachine","current","send","handleAuth","matches","auth","logoutAuth","AuthContext","React","createContext","undefined","AuthProvider","children","value","Provider","useAuthContext","context","useContext","Error","Settings","close","useSettings","settings","handleSettings","SettingsContext","SettingsProvider","data","useSettingsContext","SettingsContainer","onClick","size","color","strokeWidth","variant","HeaderContainer","header","Header","NavigationContainer","NavigationItemContainer","Navigation","className","href","MenuContainer","aside","MenuInsideContainer","MenuLogoContainer","MenuAvatarContainer","img","Menu","universal","autoHide","autoHideTimeout","autoHideDuration","src","alt","PlayerContainer","PodcastContainer","PodcastAvatar","avatar","PodcastDetails","PodcastFavoriteContainer","iconStyle","cursor","Podcast","ready","currentPodcast","name","episode","style","ControlsContainer","ControlsButtonsContainer","ControlsSliderContainer","ControlsTime","p","Controls","playing","onPlay","seek","duration","onPause","onBackward","onSeek","onForward","defaultValue","RightControlsContainer","VolumeContainer","Volume","volume","muted","onMute","onVolume","Queue","useQueue","queue","handleQueue","QueueContext","QueueProvider","useQueueContext","Rate","useRate","rate","handleRate","RateContext","RateProvider","useRateContext","RightControls","Player","useRehawk","preload","autoplay","DashboardContainer","main","Dashboard","Home","Podcasts","App","path","component","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eee87156.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const AppContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  min-height: -webkit-fill-available;\n  display: flex;\n\n  @media screen and (min-width: 800px) {\n    width: 100%;\n    height: 100vh;\n    min-height: -webkit-fill-available;\n    display: grid;\n    grid-template-rows: 70px 1fr 100px;\n    grid-template-columns: 210px 1fr;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const SearchContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  grid-area: search;\n  align-items: center;\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n`;\n","import React from \"react\";\nimport { Input } from \"@chakra-ui/react\";\n\nimport { SearchContainer } from \"./Search.styles\";\n\nconst Search = () => {\n  return (\n    <SearchContainer>\n      <Input type=\"text\" placeholder=\"Phone number\" />\n    </SearchContainer>\n  );\n};\n\nexport default Search;\n","import { Machine } from \"xstate\";\n\nimport { AuthContext, AuthStateSchema, AuthEvent } from \"./Auth.types\";\n\nconst Auth = Machine<AuthContext, AuthStateSchema, AuthEvent>({\n  id: \"auth\",\n  initial: \"loggedIn\",\n  states: {\n    idle: {\n      on: {\n        OPEN: \"open\",\n      },\n    },\n    open: {\n      on: {\n        CLOSE: \"idle\",\n      },\n      initial: \"getstarted\",\n      states: {\n        getstarted: {\n          on: {\n            SIGNIN: \"signin\",\n            SIGNUP: \"signup\",\n            FORGOT: \"forgot\",\n          },\n        },\n        signin: {\n          on: {\n            SIGNUP: \"signup\",\n            FORGOT: \"forgot\",\n          },\n        },\n        signup: {\n          on: {\n            SIGNIN: \"signin\",\n            FORGOT: \"forgot\",\n          },\n        },\n        forgot: {\n          on: {\n            SIGNIN: \"signin\",\n            SIGNUP: \"signup\",\n          },\n        },\n        reset: {\n          on: {\n            SUBMITTING: \"submitting\",\n          },\n        },\n        submitting: {\n          on: {\n            SUCCESS: \"success\",\n            ERROR: \"signin\",\n          },\n        },\n        success: {\n          type: \"final\",\n        },\n      },\n    },\n    loggedIn: {\n      on: {\n        LOGOUT: \"idle\",\n      },\n    },\n  },\n});\n\nexport default Auth;\n","import { useMachine } from \"@xstate/react\";\n\nimport Auth from \"src/machines/Auth/Auth\";\n\nconst useAuth = () => {\n  const [current, send] = useMachine(Auth);\n\n  const handleAuth = () => {\n    if (current.matches(\"idle\")) {\n      send(\"OPEN\");\n    } else {\n      send(\"CLOSE\");\n    }\n  };\n\n  const logoutAuth = () => {\n    send(\"LOGOUT\");\n    handleAuth();\n  };\n\n  return {\n    auth: current,\n    handleAuth,\n    logoutAuth,\n    send,\n  };\n};\n\nexport default useAuth;\n","import React, { useContext } from \"react\";\n\nimport useAuth from \"src/hooks/useAuth\";\n\nconst AuthContext = React.createContext(undefined as any);\n\nconst AuthProvider = ({ children }: any) => {\n  const { auth, handleAuth, logoutAuth, send } = useAuth();\n\n  const value = [auth, handleAuth, logoutAuth, send];\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nconst useAuthContext = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth can only be used inside AuthProvider\");\n  }\n  return context;\n};\n\nexport { AuthProvider, useAuthContext };\n","import { Machine } from \"xstate\";\n\nimport {\n  SettingsContext,\n  SettingsStateSchema,\n  SettingsEvent,\n} from \"./Settings.types\";\n\nconst Settings = Machine<SettingsContext, SettingsStateSchema, SettingsEvent>({\n  id: \"settings\",\n  initial: \"close\",\n  states: {\n    close: {\n      on: {\n        OPEN: \"open\",\n      },\n    },\n    open: {\n      on: {\n        CLOSE: \"close\",\n      },\n    },\n  },\n});\n\nexport default Settings;\n","import { useMachine } from \"@xstate/react\";\n\nimport Settings from \"src/machines/Settings/Settings\";\n\nconst useSettings = () => {\n  const [current, send] = useMachine(Settings);\n\n  const handleSettings = () => {\n    if (current.matches(\"close\")) {\n      send(\"OPEN\");\n    } else {\n      send(\"CLOSE\");\n    }\n  };\n\n  return { settings: current, handleSettings };\n};\n\nexport default useSettings;\n","import React, { useContext } from \"react\";\n\nimport useSettings from \"src/hooks/useSettings\";\n\nconst SettingsContext = React.createContext(undefined as any);\n\nconst SettingsProvider = ({ children }: any) => {\n  const { settings, handleSettings } = useSettings();\n\n  const data = [settings, handleSettings];\n\n  return (\n    <SettingsContext.Provider value={data}>{children}</SettingsContext.Provider>\n  );\n};\n\nconst useSettingsContext = () => {\n  const context = useContext(SettingsContext);\n  if (context === undefined) {\n    throw new Error(\"useSettings can only be used inside SettingsProvider\");\n  }\n  return context;\n};\n\nexport { SettingsProvider, useSettingsContext };\n","import styled from \"@emotion/styled\";\n\nexport const SettingsContainer = styled.div`\n  width: fit-content;\n  height: 100%;\n  grid-column: 2 / 3;\n  grid-row: 1 / 2;\n  display: flex;\n  justify-self: flex-end;\n  justify-content: flex-end;\n  align-items: center;\n\n  svg {\n    :hover {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"@chakra-ui/react\";\nimport { User } from \"react-feather\";\n\nimport { useAuthContext } from \"src/context/Auth/Auth\";\nimport { useSettingsContext } from \"src/context/Settings/Settings\";\n\nimport { SettingsContainer } from \"./Settings.styles\";\n\nconst Settings = () => {\n  const [auth, handleAuth] = useAuthContext();\n  const [, handleSettings] = useSettingsContext();\n\n  const renderSettings = () => {\n    if (auth.matches(\"loggedIn\")) {\n      return (\n        <User\n          onClick={handleSettings}\n          size={16}\n          color=\"#B7B7B7\"\n          strokeWidth={1.7}\n        />\n      );\n    }\n\n    return (\n      <Link onClick={handleAuth} variant=\"primary\" size=\"normal\">\n        Login\n      </Link>\n    );\n  };\n\n  return <SettingsContainer>{renderSettings()}</SettingsContainer>;\n};\n\nexport default Settings;\n","import styled from \"@emotion/styled\";\n\nexport const HeaderContainer = styled.header`\n  display: none;\n\n  @media screen and (min-width: 800px) {\n    width: 100%;\n    height: 100%;\n    display: grid;\n    grid-area: header;\n    grid-template-columns: 500px 1fr;\n    grid-template-rows: 1fr;\n    grid-template-areas: \"search settings\";\n    grid-column-gap: 30px;\n    background: #ffffff;\n    border-bottom: #f3f3f3;\n    padding-left: 30px;\n    padding-right: 30px;\n    z-index: 1;\n    grid-column: 2 / 3;\n    grid-row: 1 / 2;\n  }\n`;\n","import React from \"react\";\n\nimport Search from \"./Search/Search\";\nimport Settings from \"./Settings/Settings\";\n\nimport { HeaderContainer } from \"./Header.styles\";\n\nconst Header = () => (\n  <HeaderContainer>\n    <Search />\n    <Settings />\n  </HeaderContainer>\n);\n\nexport default Header;\n","import styled from \"@emotion/styled\";\n\nexport const NavigationContainer = styled.div`\n  width: 100%;\n  max-width: 500px;\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: 1fr;\n  align-items: center;\n  justify-content: center;\n  justify-self: center;\n\n  .favorites {\n    display: none;\n  }\n\n  @media screen and (min-width: 800px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: repeat(3, max-content);\n    grid-row-gap: 30px;\n    padding: 0 30px 0 30px;\n\n    .favorites {\n      display: grid;\n    }\n\n    .search,\n    .settings {\n      display: none;\n    }\n  }\n`;\n\nexport const NavigationItemContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 800px) {\n    width: auto;\n    height: auto;\n    display: grid;\n    grid-template-columns: max-content minmax(min-content, max-content);\n    grid-template-rows: 1fr;\n    grid-column-gap: 10px;\n    justify-self: flex-start;\n\n    :hover {\n      svg {\n        stroke: #101010;\n      }\n\n      a {\n        color: #101010;\n      }\n    }\n  }\n\n  #link-desktop {\n    display: none;\n\n    @media screen and (min-width: 800px) {\n      display: block;\n      justify-self: flex-start;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Home, Headphones, Search, User, Heart } from \"react-feather\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport {\n  NavigationContainer,\n  NavigationItemContainer,\n} from \"./Navigation.styles\";\n\nconst Navigation = () => (\n  <NavigationContainer>\n    <NavigationItemContainer className=\"browse\">\n      <Link href=\"/app\">\n        <Home size={16} strokeWidth={1.7} />\n      </Link>\n\n      <Link id=\"link-desktop\" href=\"/app\">\n        Browse\n      </Link>\n    </NavigationItemContainer>\n\n    <NavigationItemContainer className=\"podcasts\">\n      <Link href=\"/app/podcasts\">\n        <Headphones size={16} strokeWidth={1.7} />\n      </Link>\n\n      <Link\n        id=\"link-desktop\"\n        href=\"/app/podcasts\"\n      >\n        Podcasts\n      </Link>\n    </NavigationItemContainer>\n\n    <NavigationItemContainer className=\"favorites\">\n      <Link href=\"/app/favorites\">\n        <Heart size={16} strokeWidth={1.7} />\n      </Link>\n\n      <Link\n        id=\"link-desktop\"\n        href=\"/app/favorites\"\n      >\n        Favorites\n        </Link>\n    </NavigationItemContainer>\n\n    <NavigationItemContainer className=\"search\">\n      <Link href=\"/app/search\">\n        <Search size={16} strokeWidth={1.7} />\n      </Link>\n    </NavigationItemContainer>\n\n    <NavigationItemContainer className=\"settings\">\n      <Link href=\"/app/settings\">\n        <User size={16} strokeWidth={1.7} />\n      </Link>\n    </NavigationItemContainer>\n  </NavigationContainer>\n);\n\nexport default Navigation;\n","import styled from \"@emotion/styled\";\n\nexport const MenuContainer = styled.aside`\n  width: 100%;\n  height: 60px;\n  bottom: 0px;\n  position: fixed;\n  background: #ffffff;\n  z-index: 100;\n\n  @media screen and (min-width: 800px) {\n    grid-column: 1 / 2;\n    grid-row: 1 / 3;\n    width: 100%;\n    height: 100%;\n    position: inherit;\n    z-index: 0;\n    background: #ffffff;\n    border-right: #f3f3f3;\n  }\n`;\n\nexport const MenuInsideContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n\n  @media screen and (min-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 80px 1fr 210px;\n    grid-row-gap: 30px;\n  }\n`;\n\nexport const MenuLogoContainer = styled.div`\n  display: none;\n\n  @media screen and (min-width: 800px) {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 0 30px 0 30px;\n    grid-column: 1 / 2;\n    grid-row: 1 / 2;\n  }\n`;\n\nexport const MenuAvatarContainer = styled.img`\n  display: none;\n\n  @media screen and (min-width: 800px) {\n    display: block;\n    cursor: pointer;\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n  }\n`;\n","import React from \"react\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport Navigation from \"./Navigation/Navigation\";\n\nimport {\n  MenuContainer,\n  MenuInsideContainer,\n  MenuLogoContainer,\n  MenuAvatarContainer,\n} from \"./Menu.styles\";\n\nconst avatar =\n  \"https://upload.wikimedia.org/wikipedia/commons/f/f2/99%25_Invisible_logo.jpg\";\n\nconst Menu = () => {\n  return (\n    <MenuContainer>\n      <Scrollbars\n        universal\n        autoHide\n        autoHideTimeout={100}\n        autoHideDuration={100}\n      >\n        <MenuInsideContainer>\n          <MenuLogoContainer>\n            <Link href=\"/app\" variant=\"secondary\" size=\"normal\">\n              <h1>Logo</h1>\n            </Link>\n          </MenuLogoContainer>\n\n          <Navigation />\n\n          <Link\n            href=\"/app/episode/[episode]\"\n            variant=\"secondary\"\n            size=\"normal\"\n          >\n            <MenuAvatarContainer src={avatar} alt=\"Podcast logo\" />\n          </Link>\n        </MenuInsideContainer>\n      </Scrollbars>\n    </MenuContainer>\n  );\n};\n\nexport default Menu;\n","import styled from \"@emotion/styled\";\n\nexport const PlayerContainer = styled.div`\n  width: 100%;\n  height: 70px;\n  position: fixed;\n  bottom: 59px;\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-template-rows: 14px 1fr;\n  grid-column-gap: 20px;\n  grid-area: \"player\";\n  background: #ffffff;\n  box-sizing: border-box;\n  cursor: pointer;\n  padding: 0;\n\n  @media screen and (min-width: 800px) {\n    width: 100%;\n    height: auto;\n    max-height: 140px;\n    grid-row: 3 / 4;\n    grid-column: 1 / 3;\n    grid-template-columns: 1fr minmax(auto, 390px) 1fr;\n    grid-template-rows: 1fr;\n    grid-area: \"player\";\n    padding: 15px 30px;\n    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.05);\n    background: #ffffff;\n    z-index: 1;\n    cursor: default;\n    position: inherit;\n  }\n\n  @media screen and (min-width: 1020px) {\n    grid-template-columns: 1fr minmax(auto, 390px) 1fr;\n    grid-template-rows: 1fr;\n    position: inherit;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nimport { PodcastAvatarProps } from \"./Podcast.types\";\n\nexport const PodcastContainer = styled.div`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-self: center;\n  justify-self: center;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n  z-index: 10;\n  margin-left: 30px;\n\n  @media screen and (min-width: 800px) {\n    width: 100%;\n    height: 100%;\n    grid-column: 1 / 2;\n    grid-row: 1 / 2;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr;\n    align-items: center;\n    margin: 0;\n  }\n`;\n\nexport const PodcastAvatar = styled.div<PodcastAvatarProps>`\n  width: 40px;\n  height: 40px;\n  background-image: url(${({ avatar }) => avatar});\n  background-size: cover;\n  border-radius: 5px;\n  align-self: center;\n\n  @media screen and (min-width: 800px) {\n    display: none;\n  }\n`;\n\nexport const PodcastDetails = styled.div`\n  display: none;\n\n  .like-button {\n    display: none;\n  }\n\n  @media screen and (min-width: 800px) {\n    width: 100%;\n    height: 50px;\n    display: grid;\n    grid-template-columns: max-content 20px;\n    grid-template-rows: max-content max-content;\n    grid-gap: 10px;\n    justify-items: flex-start;\n\n    .like-button {\n      display: block;\n    }\n  }\n`;\n\nexport const PodcastFavoriteContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  grid-row: 1 / 2;\n  grid-column: 2 / 3;\n`;\n","import React from \"react\";\nimport { Heart } from \"react-feather\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport {\n  PodcastContainer,\n  PodcastAvatar,\n  PodcastDetails,\n  PodcastFavoriteContainer,\n} from \"./Podcast.styles\";\n\nimport { PodcastProps } from \"./Podcast.types\";\n\nconst iconStyle = { cursor: \"pointer\" };\n\nconst Podcast = ({ ready, currentPodcast }: PodcastProps) => {\n  const { avatar, name, episode } = currentPodcast;\n\n  const onReady = () => {\n    if (!ready) return null;\n\n    return (\n      <PodcastContainer>\n        <PodcastAvatar avatar={avatar} />\n\n        <PodcastDetails>\n          <Link href=\"/app/episode/123\">\n            {episode}\n          </Link>\n\n          <Link href=\"/app/podcast/123\">\n            {name}\n          </Link>\n\n          <PodcastFavoriteContainer>\n            <Heart\n              className=\"like-button\"\n              size={16}\n              strokeWidth={1.7}\n              color=\"#101010\"\n              style={iconStyle}\n              onClick={() => { }}\n            />\n          </PodcastFavoriteContainer>\n        </PodcastDetails>\n      </PodcastContainer>\n    );\n  };\n\n  return onReady();\n};\n\nexport default Podcast;\n","import styled from \"@emotion/styled\";\n\nexport const ControlsContainer = styled.div`\n  grid-row: 1 / 3;\n  grid-column: 1 / 3;\n  display: grid;\n  grid-template-columns: 50px 1fr;\n  grid-template-rows: 14px 1fr;\n  grid-column-gap: 20px;\n  background: none;\n\n  @media screen and (min-width: 800px) {\n    grid-column: 2 / 3;\n    grid-row: 1 / 2;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`;\n\nexport const ControlsButtonsContainer = styled.div`\n  grid-column: 1 / 3;\n  grid-row: 2 / 3;\n  width: auto;\n  height: auto;\n  display: grid;\n  grid-template-columns: max-content max-content max-content;\n  grid-template-rows: 1fr;\n  grid-column-gap: 20px;\n  background: none;\n  justify-self: flex-end;\n  align-items: center;\n  justify-items: flex-end;\n  justify-self: center;\n\n  @media screen and (min-width: 800px) {\n    grid-column: 1 / 2;\n    grid-row: 1 / 2;\n    justify-self: center;\n    justify-items: center;\n  }\n`;\n\nexport const ControlsSliderContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  grid-column: 1 / 3;\n  grid-row: 1 / 2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 800px) {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    display: grid;\n    grid-template-columns: 50px 1fr 50px;\n    grid-template-rows: 1fr;\n  }\n`;\n\nexport const ControlsTime = styled.p`\n  display: none;\n\n  @media screen and (min-width: 800px) {\n    display: block;\n    font-family: Inter;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    line-height: 15px;\n    color: #101010;\n    text-transform: uppercase;\n    justify-self: center;\n  }\n`;\n","import React from \"react\";\nimport { Play, Pause, RotateCcw, RotateCw } from \"react-feather\";\nimport {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from \"@chakra-ui/react\"\n\nimport {\n  ControlsContainer,\n  ControlsButtonsContainer,\n  ControlsSliderContainer,\n  ControlsTime,\n} from \"./Controls.styles\";\n\ninterface ControlsProps {\n  ready: boolean;\n  playing: boolean;\n  seek: number;\n  duration: number;\n  onPlay: () => void;\n  onPause: () => void;\n  onSeek: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBackward: (value?: number) => void;\n  onForward: (value?: number) => void;\n}\n\nconst iconStyle = { cursor: \"pointer\" };\n\nconst Controls = ({\n  ready,\n  playing,\n  seek,\n  duration,\n  onPlay,\n  onPause,\n  onSeek,\n  onBackward,\n  onForward,\n}: ControlsProps) => {\n  const onPlaying = () => {\n    if (playing) {\n      return (\n        <Pause\n          size={28}\n          color=\"#101010\"\n          strokeWidth={1.7}\n          style={iconStyle}\n          onClick={onPause}\n        />\n      );\n    }\n\n    return (\n      <Play\n        size={28}\n        color=\"#101010\"\n        strokeWidth={1.7}\n        style={iconStyle}\n        onClick={onPlay}\n      />\n    );\n  };\n\n  const onReady = () => {\n    if (!ready) return null;\n\n    return (\n      <ControlsContainer>\n        <ControlsButtonsContainer>\n          <RotateCcw\n            size={18}\n            color=\"#101010\"\n            style={iconStyle}\n            strokeWidth={2}\n            onClick={() => onBackward(15)}\n          />\n\n          {onPlaying()}\n\n          <RotateCw\n            size={18}\n            color=\"#101010\"\n            style={iconStyle}\n            strokeWidth={2}\n            onClick={() => onForward(15)}\n          />\n        </ControlsButtonsContainer>\n\n        <ControlsSliderContainer>\n          <ControlsTime>1:21</ControlsTime>\n\n          <Slider defaultValue={30}>\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n\n          <ControlsTime>45:12</ControlsTime>\n        </ControlsSliderContainer>\n      </ControlsContainer>\n    );\n  };\n\n  return onReady();\n};\n\nexport default Controls;\n","import styled from \"@emotion/styled\";\n\nexport const RightControlsContainer = styled.div`\n  display: none;\n\n  @media screen and (min-width: 800px) {\n    width: auto;\n    height: 100%;\n    grid-column: 3/ 4;\n    grid-row: 1 / 2;\n    display: grid;\n    grid-template-columns: repeat(3, max-content);\n    grid-template-rows: 1fr;\n    grid-column-gap: 15px;\n    align-items: center;\n    justify-content: space-evenly;\n    justify-self: flex-end;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const VolumeContainer = styled.div`\n  display: none;\n\n  @media screen and (min-width: 800px) {\n    width: auto;\n    height: 100%;\n    grid-column: 3 / 4;\n    grid-row: 1 / 2;\n    display: grid;\n    grid-template-columns: max-content 80px;\n    grid-template-rows: 1fr;\n    grid-column-gap: 15px;\n    align-items: center;\n    justify-content: space-evenly;\n    justify-self: flex-end;\n  }\n`;\n","import React from \"react\";\nimport {\n  Volume as VolumeFirst,\n  Volume1,\n  Volume2,\n  VolumeX,\n} from \"react-feather\";\nimport {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from \"@chakra-ui/react\"\n\nimport { VolumeContainer } from \"./Volume.styles\";\n\nconst iconStyle = { cursor: \"pointer\" };\n\ninterface VolumeProps {\n  ready: boolean;\n  volume: number;\n  muted: boolean;\n  onVolume: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onMute: () => void;\n}\n\nconst Volume = ({ ready, volume, muted, onVolume, onMute }: VolumeProps) => {\n  const renderVolume = () => {\n    if (volume === 0 || muted) {\n      return (\n        <VolumeX\n          size={20}\n          strokeWidth={1.7}\n          color=\"#101010\"\n          style={iconStyle}\n          onClick={onMute}\n        />\n      );\n    }\n    if (volume === 0.1) {\n      return (\n        <VolumeFirst\n          size={20}\n          strokeWidth={1.7}\n          color=\"#101010\"\n          style={iconStyle}\n          onClick={onMute}\n        />\n      );\n    }\n    if (volume > 0.1 && volume < 0.5) {\n      return (\n        <Volume1\n          size={20}\n          strokeWidth={1.7}\n          color=\"#101010\"\n          style={iconStyle}\n          onClick={onMute}\n        />\n      );\n    }\n    if (volume > 0.5 && volume < 0.8) {\n      return (\n        <Volume2\n          size={20}\n          strokeWidth={1.7}\n          color=\"#101010\"\n          style={iconStyle}\n          onClick={onMute}\n        />\n      );\n    }\n    return (\n      <Volume2\n        size={20}\n        strokeWidth={1.7}\n        color=\"#101010\"\n        style={iconStyle}\n        onClick={onMute}\n      />\n    );\n  };\n\n  const onReady = () => {\n    if (!ready) return null;\n\n    return (\n      <VolumeContainer>\n        {renderVolume()}\n        <Slider defaultValue={30}>\n          <SliderTrack>\n            <SliderFilledTrack />\n          </SliderTrack>\n          <SliderThumb />\n        </Slider>\n      </VolumeContainer>\n    );\n  };\n\n  return onReady();\n};\n\nexport default Volume;\n","import { Machine } from \"xstate\";\n\nimport { QueueContext, QueueStateSchema, QueueEvent } from \"./Queue.types\";\n\nconst Queue = Machine<QueueContext, QueueStateSchema, QueueEvent>({\n  id: \"queue\",\n  initial: \"close\",\n  states: {\n    close: {\n      on: {\n        OPEN: \"open\",\n      },\n    },\n    open: {\n      on: {\n        CLOSE: \"close\",\n      },\n    },\n  },\n});\n\nexport default Queue;\n","import { useMachine } from \"@xstate/react\";\n\nimport Queue from \"src/machines/Queue/Queue\";\n\nconst useQueue = () => {\n  const [current, send] = useMachine(Queue);\n\n  const handleQueue = () => {\n    if (current.matches(\"close\")) {\n      send(\"OPEN\");\n    } else {\n      send(\"CLOSE\");\n    }\n  };\n\n  return { queue: current, handleQueue };\n};\n\nexport default useQueue;\n","import React, { useContext } from \"react\";\n\nimport useQueue from \"src/hooks/useQueue\";\n\nconst QueueContext = React.createContext(undefined as any);\n\nconst QueueProvider = ({ children }: any) => {\n  const { queue, handleQueue } = useQueue();\n\n  const data = [queue, handleQueue];\n\n  return <QueueContext.Provider value={data}>{children}</QueueContext.Provider>;\n};\n\nconst useQueueContext = () => {\n  const context = useContext(QueueContext);\n  if (context === undefined) {\n    throw new Error(\"useQueue can only be used inside QueueProvider\");\n  }\n  return context;\n};\n\nexport { QueueProvider, useQueueContext };\n","import { Machine } from \"xstate\";\n\nimport { RateContext, RateStateSchema, RateEvent } from \"./Rate.types\";\n\nconst Rate = Machine<RateContext, RateStateSchema, RateEvent>({\n  id: \"rate\",\n  initial: \"close\",\n  states: {\n    close: {\n      on: {\n        OPEN: \"open\",\n      },\n    },\n    open: {\n      on: {\n        CLOSE: \"close\",\n      },\n    },\n  },\n});\n\nexport default Rate;\n","import { useMachine } from \"@xstate/react\";\n\nimport Rate from \"src/machines/Rate/Rate\";\n\nconst useRate = () => {\n  const [current, send] = useMachine(Rate);\n\n  const handleRate = () => {\n    if (current.matches(\"close\")) {\n      send(\"OPEN\");\n    } else {\n      send(\"CLOSE\");\n    }\n  };\n\n  return { rate: current, handleRate };\n};\n\nexport default useRate;\n","import React, { useContext } from \"react\";\n\nimport useRate from \"src/hooks/useRate\";\n\nconst RateContext = React.createContext(undefined as any);\n\nconst RateProvider = ({ children }: any) => {\n  const { rate, handleRate } = useRate();\n\n  const data = [rate, handleRate];\n\n  return <RateContext.Provider value={data}>{children}</RateContext.Provider>;\n};\n\nconst useRateContext = () => {\n  const context = useContext(RateContext);\n  if (context === undefined) {\n    throw new Error(\"useRate can only be used inside RateProvider\");\n  }\n  return context;\n};\n\nexport { RateProvider, useRateContext };\n","import React from \"react\";\nimport { Clock, List } from \"react-feather\";\n\nimport { RightControlsContainer } from \"./RightControls.styles\";\n\nimport Volume from \"./Volume/Volume\";\n\nimport { useQueueContext } from \"src/context/Queue/Queue\";\nimport { useRateContext } from \"src/context/Rate/Rate\";\n\nconst iconStyle = { cursor: \"pointer\" };\n\ninterface RightControlsProps {\n  ready: boolean;\n  volume: number;\n  muted: boolean;\n  onVolume: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onMute: () => void;\n}\n\nconst RightControls = ({\n  ready,\n  volume,\n  muted,\n  onVolume,\n  onMute,\n}: RightControlsProps) => {\n  const [, handleQueue] = useQueueContext();\n  const [, handleRate] = useRateContext();\n\n  return (\n    <RightControlsContainer>\n      <List\n        size={20}\n        strokeWidth={1.7}\n        color=\"#101010\"\n        style={iconStyle}\n        onClick={handleQueue}\n      />\n\n      <Clock\n        size={20}\n        strokeWidth={1.7}\n        color=\"#101010\"\n        style={iconStyle}\n        onClick={handleRate}\n      />\n\n      <Volume\n        ready={ready}\n        volume={volume}\n        muted={muted}\n        onVolume={onVolume}\n        onMute={onMute}\n      />\n    </RightControlsContainer>\n  );\n};\n\nexport default RightControls;\n","import React from \"react\";\nimport { useRehawk } from \"rehawk\";\n\nimport { PlayerContainer } from \"./Player.styles\";\n\nimport Podcast from \"./Podcast/Podcast\";\nimport Controls from \"./Controls/Controls\";\nimport RightControls from \"./RightControls/RightControls\";\n\nconst src =\n  \"https://storage.googleapis.com/media-session/elephants-dream/the-wires.mp3\";\n\nconst currentPodcast = {\n  avatar:\n    \"https://upload.wikimedia.org/wikipedia/commons/f/f2/99%25_Invisible_logo.jpg\",\n  name: \"WTF with Marc Maron Podcast\",\n  episode: \"Episode 1137 - John Legend\",\n};\n\nconst Player = () => {\n  const {\n    ready,\n    playing,\n    seek,\n    duration,\n    volume,\n    muted,\n    onPlay,\n    onPause,\n    onSeek,\n    onVolume,\n    onMute,\n    onBackward,\n    onForward,\n  } = useRehawk({\n    src,\n    preload: true,\n    volume: 1.0,\n    rate: 1.0,\n    autoplay: false,\n  });\n\n  return (\n    <PlayerContainer>\n      <Podcast ready={ready} currentPodcast={currentPodcast} />\n\n      <Controls\n        ready={ready}\n        playing={playing}\n        seek={seek}\n        duration={duration}\n        onPlay={onPlay}\n        onPause={onPause}\n        onSeek={onSeek}\n        onBackward={onBackward}\n        onForward={onForward}\n      />\n\n      <RightControls\n        ready={ready}\n        volume={volume}\n        muted={muted}\n        onVolume={onVolume}\n        onMute={onMute}\n      />\n    </PlayerContainer>\n  );\n};\n\nexport default Player;\n","import styled from \"@emotion/styled\";\n\nexport const DashboardContainer = styled.main`\n  width: 100%;\n  height: 100%;\n  grid-row: 1 / 2;\n  grid-column: 1 / 2;\n  background: #ffffff;\n\n  @media screen and (min-width: 800px) {\n    width: 100%;\n    height: 100%;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background: #ffffff;\n  }\n`;\n","import React from \"react\";\n\nimport { DashboardContainer } from \"./Dashboard.styles\";\n\ninterface DashboardProps {\n  children: React.ReactNode;\n}\n\nconst Dashboard = ({ children }: DashboardProps) => (\n  <DashboardContainer>{children}</DashboardContainer>\n);\n\nexport default Dashboard;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  )\n};\n\nexport default Home;","import React from \"react\";\n\nconst Podcasts = () => {\n  return (\n    <div>\n      <h1>Podcasts</h1>\n    </div>\n  )\n};\n\nexport default Podcasts;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ChakraProvider, CSSReset } from \"@chakra-ui/react\"\nimport { RehawkProvider } from \"rehawk\";\n\nimport { AppContainer } from \"./App.styles\";\n\nimport Header from \"./Header/Header\";\nimport Menu from \"./Menu/Menu\";\nimport Player from \"./Player/Player\";\nimport Dashboard from \"./Dashboard/Dashboard\";\n\nimport Home from \"src/modules/App/Home/Home\";\nimport Podcasts from \"src/modules/App/Podcasts/Podcasts\";\n\nimport { AuthProvider } from \"src/context/Auth/Auth\";\nimport { SettingsProvider } from \"src/context/Settings/Settings\";\nimport { QueueProvider } from \"src/context/Queue/Queue\";\nimport { RateProvider } from \"src/context/Rate/Rate\";\n\nimport { useAuthContext } from \"src/context/Auth/Auth\";\nimport { useSettingsContext } from \"src/context/Settings/Settings\";\nimport { useQueueContext } from \"src/context/Queue/Queue\";\nimport { useRateContext } from \"src/context/Rate/Rate\";\n\nconst App = () => {\n  const [auth, handleAuth] = useAuthContext();\n  const [settings] = useSettingsContext();\n  const [queue] = useQueueContext();\n  const [rate, handleRate] = useRateContext();\n\n  const renderAuthModal = () => {\n    if (auth.matches(\"open\")) {\n      return <div><h1>Auth</h1></div>;\n    }\n    return null;\n  };\n\n  const renderSettingsModal = () => {\n    if (auth.matches(\"loggedIn\")) {\n      if (settings.matches(\"open\")) {\n        return <div><h1>Settings</h1></div>;\n      }\n    }\n    return null;\n  };\n\n  const renderQueueModal = () => {\n    if (queue.matches(\"open\")) {\n      return <div><h1>Queue</h1></div>;\n    }\n    return null;\n  };\n\n  const renderRateModal = () => {\n    if (rate.matches(\"open\")) {\n      return <div><h1>Rate</h1></div>;\n    }\n    return null;\n  };\n\n  return (\n    <BrowserRouter>\n      <ChakraProvider>\n        <RehawkProvider>\n          <AuthProvider>\n            <SettingsProvider>\n              <QueueProvider>\n                <RateProvider>\n                  <>\n                    {renderAuthModal()}\n                    {renderSettingsModal()}\n                    {renderQueueModal()}\n                    {renderRateModal()}\n\n                    <AppContainer>\n                      <Dashboard>\n                        <Switch>\n                          <Route path=\"/\" component={Home} />\n                          <Route path=\"/podcasts\" component={Podcasts} />\n                        </Switch>\n                      </Dashboard>\n                      <Header />\n                      <Player />\n                      <Menu />\n                    </AppContainer>\n                  </>\n                </RateProvider>\n              </QueueProvider>\n            </SettingsProvider>\n          </AuthProvider>\n        </RehawkProvider>\n      </ChakraProvider>\n      <CSSReset />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'src/components/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}